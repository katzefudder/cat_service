lua_package_cpath "$prefix/resty_modules/lualib/?.so;;";
lua_package_path '/etc/nginx/lua/?.lua;;';

lua_shared_dict prometheus_metrics 100M;

    init_by_lua '
        prometheus = require("prometheus").init("prometheus_metrics")

        metric_requests = prometheus:counter(
            "nginx_http_requests_total",
            "Number of HTTP requests",
            {"host", "status"}
        )
        metric_api_requests = prometheus:counter(
            "nginx_api_requests_package_type",
            "Number of API requests per package type",
            {"host", "status", "package_type"}
        )
        metric_latency = prometheus:histogram(
            "nginx_http_request_duration_seconds",
            "HTTP request latency",
            {"host", "status"}
        )
        metric_connections = prometheus:gauge(
            "nginx_http_connections",
            "Number of HTTP connections",
            {"state"}
        )
    ';

    log_by_lua '
        local host = ngx.var.host:gsub("^www.", "")

        -- just in case you want to log requests to a specific part of your API...
        if string.match(ngx.var.request_uri, "/api/([a-z]+)/") then
            local package = string.match(ngx.var.request_uri, "/api/([a-z]+)/")
            metric_api_requests:inc(1, {host, ngx.var.status, package})
        end

        -- local cache_status = (ngx.var.upstream_cache_status or "")
        metric_requests:inc(1, {host, ngx.var.status})
        metric_latency:observe(ngx.now() - ngx.req.start_time(), {host, ngx.var.status})
    ';